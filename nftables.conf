#!/usr/bin/nft -f
# vim:set ts=2 sw=2 et:

table inet hardening
delete table inet hardening
table inet hardening {
  chain prerouting_filter {
    type filter hook prerouting priority filter
    policy accept

    fib saddr . iif oif missing limit rate 5/minute log flags ether prefix "[rpfilter denied] " level warn
    fib saddr . iif oif missing counter drop comment "rpfilter"
  }

  chain input_filter {
    type filter hook input priority filter - 200
    policy accept

    # works in input filter?
    #fib saddr . iif oif missing drop comment "rpfilter"
    iif $inet_iface fib daddr . iif type != { local, multicast, broadcast, anycast } limit rate 5/minute log flags ether prefix "[fibin denied] " level warn
    iif $inet_iface fib daddr . iif type != { local, multicast, broadcast, anycast } counter drop comment "allow to valid daddr only";
  }

  chain output_filter {
    type filter hook output priority filter + 200
    policy accept

    oif $inet_iface fib saddr . oif type != { unspec, local } limit rate 5/minute log prefix "[fibouts denied] " level warn
    oif $inet_iface fib saddr . oif type != { unspec, local } counter drop comment "allow from valid saddr only";
    oif $inet_iface fib daddr type == local limit rate 5/minute log prefix "[fiboutd denied] " level warn
    oif $inet_iface fib daddr type == local counter drop comment "allow to valid daddr only";
  }
}
